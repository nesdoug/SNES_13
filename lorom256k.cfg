# ca65 linker config for 256 KiB (2 Mbit) sfc file 
# Copyright 2014-2015 Damian Yerrick
# modified by Doug Fraker 2020

# Physical areas of memory
MEMORY {
  ZEROPAGE:   start =  $000000, size = $0100;
  BSS:        start =  $000100, size = $1E00;
  BSS7E:      start =  $7E2000, size = $E000;
  BSS7F:      start =  $7F0000, size =$10000;

 # fastROM
  ROM0:       start =  $808000, size = $8000, fill = yes;
  ROM1:       start =  $818000, size = $8000, fill = yes;
  ROM2:       start =  $828000, size = $8000, fill = yes;
  ROM3:       start =  $838000, size = $8000, fill = yes;
  ROM4:       start =  $848000, size = $8000, fill = yes;
  ROM5:       start =  $858000, size = $8000, fill = yes;
  ROM6:       start =  $868000, size = $8000, fill = yes;
  ROM7:       start =  $878000, size = $8000, fill = yes;


}

# Logical areas code/data can be put into.
SEGMENTS {
  # Read-only areas for main CPU
  CODE:       load = ROM0, align = $100;
  RODATA:     load = ROM0, align = $100;
  SNESHEADER: load = ROM0, start = $80FFC0;
  CODE1:      load = ROM1, align = $100, optional=yes;
  RODATA1:    load = ROM1, align = $100, optional=yes;
  CODE2:      load = ROM2, align = $100, optional=yes;
  RODATA2:    load = ROM2, align = $100, optional=yes;
  CODE3:      load = ROM3, align = $100, optional=yes;
  RODATA3:    load = ROM3, align = $100, optional=yes;
  CODE4:      load = ROM4, align = $100, optional=yes;
  RODATA4:    load = ROM4, align = $100, optional=yes;
  CODE5:      load = ROM5, align = $100, optional=yes;
  RODATA5:    load = ROM5, align = $100, optional=yes;
  CODE6:      load = ROM6, align = $100, optional=yes;
  RODATA6:    load = ROM6, align = $100, optional=yes;
  CODE7:      load = ROM7, align = $100, optional=yes;
  RODATA7:    load = ROM7, align = $100, optional=yes;

  # Areas for variables for main CPU
  ZEROPAGE:   load = ZEROPAGE, type = zp, define=yes;
  BSS:        load = BSS, type = bss, align = $100, optional=yes;
  BSS7E:      load = BSS7E, type = bss, align = $100, optional=yes;
  BSS7F:      load = BSS7F, type = bss, align = $100, optional=yes;

}
